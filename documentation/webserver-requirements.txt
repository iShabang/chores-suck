Parse the URL 
Check if URL is for the API or webpage 
If URL is for API 
Route the request to the correct handler 
If the URL is for a webpage 

API Handlers 
CreateGroup – check if group data is valid and add group to the database 
UpdateGroup – check if the group data is valid and update group in the database 
Login – validate credentials and generate session 
Register – check if data is valid and add user to the database 
UserLookup – query username in the database and return the result 
GetUserChores – query user chores in the database and return the result 
GetUserGroups – query user groups in the database and return the result 

Extract session on arrival 
Extract body on arrival 
API handlers will have a method: processRequest that handles the request and returns the information needed to finish writing the request. (takes in the session id and the body) 
I want to keep as much HTML specific code out of the handlers as possible.  

For requests that require authorization, the handler will be wrapped in another authorization interface that performs the authorization before handling the request. If  not authorized, the handlers processRequest method will never be called. This way each handler does not need to make its own authorization call. 
AdminAuthorizer – interface that verifies the current user is an admin of the group they are editing 
UserAuthorizer – interface that verifies the current request is coming from an authorized user. 

The handlers will return a wrapped result containing the response body and the status of the operation 
The handler status will be an internal error code. These codes will be mapped to html status codes and written to the response AFTER the request has been handled. Handlers will NOT write to the response object directly. 

URL Parser 
Parse out the fields in the url and put into a data structure. Pass the parsed data to the request router 

Request Router 
Using the parsed URL data, determine if this is an api or file request and select the appropriate handler. 
This should be quick and utilize a fast lookup structure. 
If this is an api request and the appropriate handler is selected, setup and
call the handler's processRequest method. When the handler is finished,
determine the html status using the result and write the result to the response
object. Then write the response back. 0
